// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaAlarmes.Infrastructure;

#nullable disable

namespace SistemaAlarmes.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Electrocenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("Electrocenters");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("IdEventFramePISystem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AssetType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElectrocenterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("InverterId")
                        .HasColumnType("int");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdEventFramePISystem");

                    b.HasIndex("ElectrocenterId");

                    b.HasIndex("EventCategoryId");

                    b.HasIndex("InverterId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("PlantId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.EventCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventCategories");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Inverter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ElectrocenterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ElectrocenterId");

                    b.ToTable("Inverters");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InverterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InverterId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Electrocenter", b =>
                {
                    b.HasOne("SistemaAlarmes.Domain.Entities.Plant", "Plant")
                        .WithMany("Electrocenters")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Event", b =>
                {
                    b.HasOne("SistemaAlarmes.Domain.Entities.Electrocenter", "Electrocenter")
                        .WithMany("Events")
                        .HasForeignKey("ElectrocenterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SistemaAlarmes.Domain.Entities.EventCategory", "EventCategory")
                        .WithMany("Events")
                        .HasForeignKey("EventCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaAlarmes.Domain.Entities.Inverter", "Inverter")
                        .WithMany("Events")
                        .HasForeignKey("InverterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SistemaAlarmes.Domain.Entities.Module", "Module")
                        .WithMany("Events")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SistemaAlarmes.Domain.Entities.Plant", "Plant")
                        .WithMany("Events")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Electrocenter");

                    b.Navigation("EventCategory");

                    b.Navigation("Inverter");

                    b.Navigation("Module");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Inverter", b =>
                {
                    b.HasOne("SistemaAlarmes.Domain.Entities.Electrocenter", "Electrocenter")
                        .WithMany("Inverters")
                        .HasForeignKey("ElectrocenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Electrocenter");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Module", b =>
                {
                    b.HasOne("SistemaAlarmes.Domain.Entities.Inverter", "Inverter")
                        .WithMany("Modules")
                        .HasForeignKey("InverterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inverter");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Electrocenter", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Inverters");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.EventCategory", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Inverter", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Module", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("SistemaAlarmes.Domain.Entities.Plant", b =>
                {
                    b.Navigation("Electrocenters");

                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
